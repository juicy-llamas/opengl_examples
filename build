#!/bin/bash

# A build script to automatically install dependencies (on debian, tested on ubuntu 22.04) and build all of the projects for this repo
# Usage: $ ./build [folder name]
# you can also run './build all' or simply './build' to build all the projects
# if you want to clean the projects, you can run './build clean'
# if you want to remove the 'build' dirs, you can run './build deepclean'

# The script prompts you about missing dependencies.
# You will still have to install them with your package manager.

odir="$(pwd)"
opt="${1:-all}"

function fail() {
	printf >&2- "$1"
	cd $odir
	exit 1
}

[[ $(id -u) == 0 ]] && fail "Don't run this script as root.\n"
[[ ! $odir =~ .*opengl_examples.* ]] && fail "Is the project/repo root directory called 'opengl_examples'?\nIf you cloned the repo, git should have created an 'opengl_examples' directory. Run the script from there.\n"

function do_build() {
	printf "\n====================\nSubproject $1...\n\n"
	cd "$1" 								|| fail "\nDirectory $1 may not exist...\nBuild $1 failed.\n"
	if [[ ! -d build ]]; then
		mkdir -p build >> /dev/null
		cd build
		cmake .. 							|| fail "\nCMake failed...\nBuild $1 failed.\n"
	else
		cd build
	fi
	if [[ ! -z $2 ]]; then
		make "$2"							|| fail "\nTarget '$2' didn't succeed...\nBuild $1 failed.\n"
	else
		make 								|| fail "\nCode didn't compile...\nBuild $1 failed.\n"
	fi
	cd ../..
}

if [ ! -d "/usr/include/glm" ]; then
  fail "Library GLM not present.\nInstall with 'apt-get install libglm-dev', \n'pacman -S glm', or your system equivalent.\nIf your install is not in /usr (i.e. local install),\nthen you will have to edit the CMakeList.txt files.\n"
fi
if [ ! -f "/usr/include/GLFW/glfw3.h" ]; then
  fail "Library glfw3 not present.\nInstall with 'apt-get install libglfw3-dev', \n'pacman -S glfw', or your system equivalent.\nIf your install is not in /usr (i.e. local install),\nthen you will have to edit the CMakeList.txt files.\n"
fi
if [ ! -f "/usr/include/GL/eglew.h" ]; then
  fail "Library glew not present.\nInstall with 'apt-get install libglew-dev', \n'pacman -S glew', or your system equivalent.\nIf your install is not in /usr (i.e. local install),\nthen you will have to edit the CMakeList.txt files.\n"
fi
if [ ! -f "/usr/lib/libIL.so" ]; then
  fail "Library devil (libIL.so) not present.\nInstall with 'apt-get install libdevil-dev', \n'pacman -S devil', or your system equivalent.\nIf your install is not in /usr (i.e. local install),\nthen you will have to edit the CMakeList.txt files.\n"
fi

# get to the root directory
ndir=${odir%%/opengl_examples*}
cd "$ndir/opengl_examples"

if [[ $opt == "all" ]]; then
	echo "Building $opt..."
	for i in $(ls); do
		if [[ -f "$i/CMakeLists.txt" ]]; then
			do_build "$i"
		fi
	done
elif [[ $opt == "clean" ]]; then
	echo "Cleaning..."
	for i in $(ls); do
		if [[ -f "$i/CMakeLists.txt" ]]; then
			do_build "$i" clean
		fi
	done
elif [[ $opt == "deepclean" ]]; then
	echo "Deep Cleaning..."
	for i in $(ls); do
		if [[ -d "$i/build" ]]; then
			rm -fr "$i/build"
		fi
	done
else
	if [[ -f "$opt/CMakeLists.txt" ]]; then
		do_build "$opt"
	else
		fail "\n====================\nCannot build '$opt'.\n"
	fi
fi

cd $odir
